class pet{ } : 슈퍼클래스(상위클래스)

class dog extends pet{ } : dog클래스가 pet클래스를 상속받는다 : 서브클래스(하위클래스)

서브클래스는 슈퍼클래스의 멤버변수와 메소드를 자신의 것처럼 사용할 수 있음
-> 자식 클래스를 만들때 부모의 클래스가 가지고 있는 부분까지 포함하여 저장 공간을 만드릭 때문


super -> 부모클래스의 멤버변수나 메소드를 불러올때 사용
super.멤버변수, super.메소드
부모에 있는 생성자에 접근하기 위해서는 super 생성자를 사용

메소드 오버라이딩 -> 상속관계에서만 일어남
부모가 가지고 있는 메소드를 재정의 하는것


상속받아온 생성자도 super을 통해서 초기화 해줘야됨
public Manager(~~){
	super(~~);
	상속받은것 외의 변수들 초기화(this.() = ())
}

@Override -> 부모의 메소드를 오버라이드(재정의)했다는 것에 대한 주석을 주는 것
public void info()

alt shift s
source -> generate constructor from super
         -> generate using field -> 위에 옵션에서 super에서 받아올것 지정
