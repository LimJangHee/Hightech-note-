int[] ar = {10, 20, 30, 40, 50};  -> 참조변수 선언과 동시에 초기화할때만 사용가능
int[] ar = new int[] {10, 20, 30, 40, 50};  -> 기존에 선언된 배열에 다른 값, 새로운 공간을 할당하고 싶을때는 이 방법을 사용해야됨
-> 그래서 통용되는거는 이 방법

2차원배열 -> 1차원배열의 집합

1차원배열을 3개가지며 그 1차원배열이 4개의 공간을 가지고 있는 2차원배열 
int[][] ar = new int[3][4]
[1차원배열개수][1차원배열 공간 개수]
[행의 개수][열의 개수]
[주소값이 저장되어있는 공간][정수등의 값들이 저장되어 있는 공간]

int[] | []ar; -> ar이라는 배열은 int1차원배열의 주소값들을 가지고 있는 배열

int[][]ar = new int[3][];  공간을 각각 다르게 생성가능 <-> int[][]ar = new int[3][4] 4개의 공간을 공통되게 생성
-> 주소값을 기억할 수 있는 배열 3개만 생성
-> 이경우 가르킬 주소값이 없기 때문에 null값을 출력(비어있는 주소)

ar[0] = new int[4];
ar[1] = new int[6];
ar[2] = new int[2];
-> 이런식으로 각각의 공간들을 다르게 생성해줄 수 있음