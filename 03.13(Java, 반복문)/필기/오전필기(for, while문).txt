for, while문은 각 상황의 직관성에 따라서 사용하는 케이스가 다름
단 for문의 경우 초기화 되는 변수 값이 반복문 종료와 동시에 사라짐
while문은 반복문 밖에서 초기화 시켰기 때문에 반복문이 끝나도 사용 가능

// while문 형식 -> 횟수를 잘 모를때 자주 사용

시작값 선언과 초기화 -> 반복문 밖에다 넣어서 계속 초기화 되지 않게 함

while(조건){ //해당 조건식이 거짓이 될때까지 블록스코프안의 내용을 반복(참이면 계속 반복)
	반복할 문장
	해당 행동에 되한 카운트(증감)
}

조건식에는 !(not)을 붙여서 사용하는게 아이디어

// while문 예
int count = 1;

while(count <= 3){

println("Hello");
count++; // 빠져나왔을때 값은 4

}

//for문 형식 -> 횟수를 알때 자주 사용
시작과 끝이 존재하고 규칙적 증가나 감소를 하는 반복문에 대해서 for문 사용 

for(시작값(1) ; 종료조건(2); 증가나 감소하는 코드(4)){ //()가 순서

statement(3)

}

//for문 예
for(int count =1; count<=3; count++){ 

	println("Hello")

}