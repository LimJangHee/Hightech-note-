인터페이스 : 추상 메소드들만을 모아둔 집합
-> 객체를 만드는것이 목적이 아님(객체 생성이 불가), 기능들에 대한 (표준화)집합
-> 다중 상속을 지원함
ex)class 핸드폰 implements 사진찍기가능한, 메시지보내기가능한 등등
-> 객체를 만드는것이 목적이 아니기 때문에 변수는 없고 상수는 있음 
-> 배포시키는것이 목적이기 때문에 public static final (읽기 전용이기 때문에 public) -> 생략되어있기때문에 굳이 안적어도 됨

interface 이름 {}
상속받는 경우에는 implements키워드 사용 -> 기능을 추가해주고 싶어 라고 생각하면 됨
implements를 받아서 싹다 오버라이딩을 해주지 않으면 추상 클래스가 됨(추상 메소드들의 집합이기 때문에)

인터페이스에 있는 메소드들의 접근제한자가 다 public이기 대문에 상속받아왔을때는 public으로 만들어줘야됨