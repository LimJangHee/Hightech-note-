< JSP, Servlet >

- 프로토콜 : 컴퓨터간 데이터를 주고 받을때 필요한 규약, 규격

- IEEE, IEC, ISO

- 아래부터 계층 순서
웹서비스
TCP
IP(Internet Protocol)

- OSI 7계층

표현 계층, 응용 계층 : 데이터 속성에 따라서 표현을 다르게 
세션 계층 : 핫 라인(중간에 거치지 않고 바로 갈 수 있는 라인)
전송 계층 : 데이터를 주고 받을때 패키징이 필요로 함
네트워크 계층 : hub(데이터 센터 같은 개념으로 a -> b를 하고 싶을때 그냥 센터에서 그걸 받아서 센터에 있는 내용을 전달)
데이터 링크 계층 : 커낵터 
물리 계층 : 매체 자체, 미디어를 정하는 부분 (광케이블, 구리선, 무선 등)



- IP주소
트리구조로 형성해서 각 층을 클래스별로 구분
클래스 A
클래스 B : 8bit 중 맨 앞에 2개를 할당해놓고 그 다음부터 사용(그래서 128. ~ 191.)
-> 172.31.9.169 학교 주소를 기준으로 보면 B클래스에 해당
클래스 C

무선 굥유기에서 쏴줘서 할당하는 ip는 NAT -> 수시로 ip를 변경해주면서 할당

- URL(Uniform Resource Locator) (도메인 이름)

- 인터넷과 www -> 포트 알아볼것(www는  80포트 )
웹서버에서 다른 폴더는 접근 불가 지정한 폴더만 접근 가능한게 웹서비스이고 여기에 접근하는게 80포트

- HTTP
웹브라우저에서 파일을 가져오는 프로토콜
장점 : 가벼움, 실시간으로 전송하기 좋은 구조 

client <-> server : 웹이라는 공용 폴더에 http의 80포트로 접근
(process -> 프로그램 여러개 띄워 놓는것,  안에 쓰레드가 여러개 있는것(브라우저 탭))
여기다 cgi를 붙여서 동적인 페이지를 생성할 수 있게 되었지만 -> 프로세스 단위로 실행되기 때문에 사용자 증가에 따른 부하가 심해서 사장됨

client의 기술 | server의 기술
Flash, JS         CGI, PHP, JSP, ASP             


