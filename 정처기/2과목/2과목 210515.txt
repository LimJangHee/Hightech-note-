1. 힙 정렬에 대한 설명으로 틀린것은?? -> 책 한번 찾아볼 것
- 정렬할 입력 레코드들로 힙을 구성하고 가장 큰 키 값을 갖는 루트 노드를 제거하는 과정을 반복하여 정렬하는 기법
- 평균, 최적, 최악 수행 시간 모두 : 0(nlog2n)이다
- 완전 이진트리로 입력자료의 레코드를 구성한다

2. 단위 테스트를 통해 발견할 수 있는 오류가 아닌 것은?
- 알고리즘 오류에 따른 원치 않은 결과
- 탈출구가 없는 반복문의 사용
- 틀린 계산 수식에 의한 잘못된 결과
단위 테스트는 테스트 코드가 독립적이어야 함으로 각 모듈간의 상호작용은 해당되지 않는다
모듈 간의 비정상적 상호작용으로 인한 원치 않은 결과 -> 통합 테스트

3. 
- 파레토 법칙이 좌우한다.
- 애플리케이션 결함의 대부분은 소수의 특정한 모듈에 집중되어 존재한다.
- 결함은 발생한 모듈에서 계속 추가로 발생할 가능성이 높다.
-> 결함 집중

4. 버전 관리 항목 중 저장소에 새로운 버전의 파일로 갱신하는 것을 의미하는 용어는?
-> 체크인 

5. 
화이트 박스 테스트 : 내부 구조와 동작을 검사하는 테스트 방식, 소프트웨어의 내부 소스를 테스트
- 기본 경로는 싸이클을 최대 한번만 지나야한다
- 내부의 논리적인 모든 경로를 테스트해 테스트 케이스를 설계
블랙 박스 테스트 : 내부 구조나 작동 원리를 모르는 상태에서 입력에 따른 출력 결과를 테스트

6.
애플리케이션의 처리량, 응답시간, 경과시간, 자원사용률에 대해 가상의 사용자를 생성하고 테스트를 수행함으로써
성능 목표를 달성하였는지를 확인하는 테스트 자동화 도구는?
-> 성능 테스트 도구

명세 기반 테스트 : 주어진 명세를 빠짐없이 테스트 케이스로 구현하고 있는 지 확인하는 테스트
구조 기반 테스트 : 프로그램 내부 구조 및 복잡도를 검증하는 화이트박스 테스트 시행, 제어 흐름과 조건 결정 등이 목적

7. 소프트웨어 형상 관리에 대한 설명으로 거리가 먼 것은?
- 소프트웨어에 가해지는 변경을 제어하고 관리
- 프로젝트 계획, 분석서, 설계서, 프로그램, 테스트 케이스 모두 관리 대상
- 대표적인 형상관리 도구 : GIT, CVS, Subversion
- 유지 보수 단계뿐만 아니라 개발 단계에도 적용할 수 있다

- Ant, Maven, Gradle -> 빌드자동화 도구

8. 저작권 관리구성요소
- 콘텐츠 분배자, 패키저, 클리어링 하우스, DRM 컨트롤러 

10.
블랙박스 테스트
- 경계값 분석, 기능 테스트, 프로그램 구조 고려 X
화이트박스 테스트
- 문장검증 : 프로그램의 모든 문장이 적어도 한번씩 수행되는 검증 기준
-> 반복 조건을 만족하는데도 루프 내의 문장이 수행되지 않는 경우
- 선택검증 : 선택하는 부분만 검증
- 경로검증 : 수행 가능한 모든 경로 검사
- 조건검증 : 문장 내 조건식을 조사하는 기준 

11. 버블 정렬
(1,2) -> (2,3) -> ... 자료 비교하여 교환하여 정렬
만약 오름차순일 경우 이미 오름차순일시 무시하고 진행함
끝까지 한번 진행하는게 Pass 1

15. 인터페이스 구현 검증 도구가 아닌 것은?
검증 도구 : xUnit, STAF, Fitnesse, NTAF, Selenium, watir

20. 스택을 이용한 연산과 거리가 먼 것은?
재귀호출, 후위표현의 연산, 깊이우선탐색

선택정렬 -> 큐를 이용해서 정렬