1. 
시스템 구성요소

입력 (Input) : 처리 방법, 처리할 데이터, 조건을 시스템에 투입하는 것
처리 (Process) : 입력된 데이터를 처리 방법과 조건에 따라 처리하는 것
출력 (Output) : 처리된 결과를 시스템에서 산출하는 것
제어 (Control) : 자료를 입력하여 출력될 때까지의 처리 과정이 올바르게 진행되는지 감독하는 것
피드백 (Feedback) : 출력된 결과가 예정된 목표를 만족시키지 못할 경우 목표 달성을 위해 반복 처리하는 것

오답 : maintenance

2. 
유스케이스 다이어그램은 <사용자>의 요구를 추출하고 분석하기 위해 주로 사용한다.
액터는 대상 시스템과 상호 작용하는 사람이나 다른 시스템에 의한 역할이다.
<시스템 액터>는 본 시스템과 데이터를 주고받는 연동 시스템을 의미한다.
연동의 개념은 <양방향>으로 데이터를 파일이나 정해진 형식으로 넘겨주는 것을 의미한다.

3.
도출 -> 분석 -> 명세 -> 확인

6. GOF
factory method pattern은 상위클래스에서 객체를 생성하는 인터페이스를 정의하고, 
하위클래스에서 인스턴스를 생성하도록 하는 방식이다.
prototype pattern은 prototype을 먼저 생성하고 인스턴스를 복제하여 사용하는 구조이다.
mediator pattern은 객체간의 통제와 지시의 역할을 하는 중재자를 두어 객체지향의 목표를 달성하게 해준다.
<bridge pattern>은 구현부에서 추상층을 분리하여 각자 독립적으로 확장이 가능하게 하는 패턴이다
Adapter pattern은 기존에 구현되어 있는 클래스에 기능 발생 시 기존 클래스를 재사용할 수 있도록 중간에서 맞춰주는 역할을 한다.

8. 
시스템 품질 속성은
가용성, 변경용이성, 성능, 보안성, 사용편의성, 시험용의성 6가지가 있다.
오답 : 독립성

10. 
CASE(Computer-Aided Software Engineering)의 원천 기술이 아닌 것은?
구조적 기법, 프로토타이핑 기술, 자동프로그래밍 기술, 정보 저장소 기술, 분산 처리 기술이 있다.
오답
-> 일괄처리 기술

11. 객체에게 어떤 행위를 하도록 지시하는 명령은?
-> Message

14. UML 다이어그램이 아닌 것은?
액시디콜콤클

15.
Dependency(의존) : 한 사물의 명세서가 바뀌면 그것을 사용하는 다른 사물에게 영향을 끼치는 것을 말합니다 (Cascade 생각하셈)
< Realization(실체화) > : 한 객체가 다른 객체에 의해 오퍼레이션을 수행하도록 지정
Generalization(일반화) : 일반화된 사물과 좀 더 특수화된 사물 사이의 관계를 말합니다.('is-a')관계
Association(연관) : 두 사물간의 구조적 관계로, 어느 한 사물 객체가 다른 사물 객체와 연결되어 있음을 말함 ('has-a')관계라고도 합니다

16.
다음 중 상위 CASE 도구가 지원하는 주요기능으로 볼 수 없는 것은?
- 모델들 사이의 모순검사 기능
- 모델의 오류검증 기능
- 자료 흐름도 작성 기능
-> 오답 : 전체 소스코드 생성 기능

18. 애자일 개발 방법론
익스트림 프로그래밍(XP , Extreme Programming)
스크럼크리스털 패밀리
기능 주도 개발(FDD , Feature-Driven Development)
적응형 소프트웨어 개발 (ASD , Adaptive Software Development(
익스트림 모델링

오답: 하둡

19. GOF
생성패턴: 객체를 생성하는 것에 대한 패턴
추상팩토리 패턴, 빌더 패턴, 팩토리 메소드 패턴, 프로토타입 패턴, 싱글톤 패턴

구조 패턴: 구조를 통해 확장성을 꾀하는 패턴
어댑터 패턴, 브릿지 패턴, 컴포지트 패턴, 데코레이터 패턴, 퍼사드 패턴, 플라이웨잇 패턴, 프록시 패턴